<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Celeb Slideshow ‚Äî Random Photo Fetcher</title>
  <meta name="description" content="Hands‚Äëfree slideshow that auto‚Äëfetches celebrity photos from Wikidata/Commons with precise keyboard mapping, swipe, speed controls, category presets (Beatles, CEOs, models by decades, film/cartoon characters), random/fixed modes, and a fixed selection engine." />
  <style>
    :root { --bg:#0b0f14; --panel:#0f172a; --muted:#93a3b8; --fg:#e5eef7; --accent:#60a5fa; --ok:#34d399; --danger:#f87171; --warn:#fbbf24; }
    *{box-sizing:border-box}
    html,body{height:100%}
    body{margin:0; font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, Arial; background:var(--bg); color:var(--fg); display:grid; grid-template-rows:auto 1fr auto}
    header{display:flex; gap:12px; align-items:center; padding:10px 12px; position:sticky; top:0; z-index:40; background:rgba(2,6,23,.6); backdrop-filter:blur(8px) saturate(1.2); border-bottom:1px solid rgba(255,255,255,.06)}
    h1{font-size:16px; margin:0}
    .sp{flex:1}
    .btn{display:inline-flex; align-items:center; gap:8px; padding:8px 12px; border-radius:12px; border:1px solid rgba(255,255,255,.1); background:linear-gradient(180deg, rgba(255,255,255,.08), rgba(255,255,255,.02)); color:var(--fg); cursor:pointer; user-select:none; font-weight:600}
    .btn[disabled]{opacity:.5;cursor:not-allowed}
    .btn.primary{border-color:rgba(96,165,250,.5)}
    .btn.ok{border-color:rgba(52,211,153,.45)}
    .btn.warn{border-color:rgba(251,191,36,.45)}
    .badge{font-size:12px; padding:4px 8px; border:1px solid rgba(255,255,255,.12); border-radius:999px}
    .controls{display:flex; flex-wrap:wrap; gap:10px; align-items:center}
    label{font-size:12px; color:var(--muted)}
    input[type="range"], input[type="number"], select, input[type="text"] { appearance:none; -webkit-appearance:none; color:var(--fg); background:rgba(255,255,255,.06); border:1px solid rgba(255,255,255,.14); border-radius:10px; padding:8px 10px; font-weight:600 }
    input[type="range"]{width:160px}
    input[type="number"]{width:80px}

    .tabs{display:flex; gap:8px; padding:8px 12px; border-bottom:1px solid rgba(255,255,255,.06); background:rgba(2,6,23,.35)}
    .tab{padding:8px 12px; border-radius:10px; border:1px solid rgba(255,255,255,.1); cursor:pointer}
    .tab[aria-selected="true"]{background:rgba(96,165,250,.15); border-color:rgba(96,165,250,.5)}

    .page{display:none; height:100%}
    .page.active{display:block}

    .stage{position:relative; height:calc(100vh - 210px); min-height:360px; overflow:hidden; display:grid; place-items:center}
    .imgwrap{position:relative; width:100%; height:100%; display:grid; place-items:center}
    img.photo{max-width:85%; max-height:80%; object-fit:contain; border-radius:18px; box-shadow:0 12px 36px rgba(0,0,0,.6)}

    .nameBar{position:absolute; left:12px; right:12px; bottom:12px; background:rgba(2,6,23,.78); border:1px solid rgba(255,255,255,.08); border-radius:12px; padding:8px 10px; cursor:pointer}
    .nameBar.collapsed{height:18px; overflow:hidden}
    .title{font-size:18px; font-weight:800}
    .caption{font-size:13px; color:var(--muted)}
    .hint{font-size:12px; color:#93a3b8}

    .nameToggle{position:absolute; left:50%; transform:translateX(-50%); bottom:64px; padding:8px 12px; border-radius:12px; border:1px solid rgba(255,255,255,.14); background:#1f2a44; color:#e5eef7; font-weight:700; cursor:pointer}

    .builder{padding:12px}
    .grid{display:grid; grid-template-columns:repeat(auto-fill, minmax(160px, 1fr)); gap:10px}
    .termBtn{padding:10px 12px; border-radius:12px; background:rgba(255,255,255,.04); border:1px solid rgba(255,255,255,.12); cursor:pointer; text-align:left; user-select:none}
    .termBtn.selected{outline:2px solid var(--accent); background:rgba(96,165,250,.15)}
    .termBtn.editing{outline:2px dashed var(--warn)}

    .builderActions{display:flex; gap:8px; flex-wrap:wrap; margin-top:10px; align-items:center}

    footer{padding:10px 12px; display:flex; flex-wrap:wrap; gap:12px; align-items:center; color:var(--muted); border-top:1px solid rgba(255,255,255,.06)}
    footer a{color:var(--ok); text-decoration:none}

    .toast{position:fixed; right:16px; bottom:16px; background:rgba(2,6,23,.85); color:var(--fg); border:1px solid rgba(255,255,255,.09); padding:10px 12px; border-radius:12px; font-size:13px; display:none}

    /* Floating blue button + drawer */
    .fab{position:fixed; right:16px; bottom:16px; width:56px; height:56px; border-radius:50%; background:#3b82f6; color:white; display:grid; place-items:center; font-size:22px; cursor:pointer; box-shadow:0 10px 24px rgba(0,0,0,.35); z-index:60}
    .drawer{position:fixed; left:0; right:0; bottom:-140px; background:rgba(15,23,42,.96); border-top:1px solid rgba(255,255,255,.08); padding:12px; display:grid; gap:10px; transition:bottom .25s ease; z-index:55}
    .drawer.open{bottom:0}
    .quickRow{display:flex; gap:8px; flex-wrap:wrap}
    .quickBtn{padding:8px 10px; border-radius:10px; border:1px solid rgba(255,255,255,.14); background:rgba(255,255,255,.06); color:#e5eef7; cursor:pointer; font-weight:700}

    /* Page 3 note */
    .note{font-size:14px; color:var(--muted); padding:10px 12px}
  </style>
</head>
<body>
  <header>
    <h1>üéûÔ∏è Celeb Slideshow</h1>
    <span class="badge" id="countBadge">Loading‚Ä¶</span>
    <div class="sp"></div>
    <div class="controls">
      <button class="btn primary" id="playPauseBtn" title="Toggle autoplay">‚è∏Ô∏é Pause</button>
      <button class="btn" id="nextBtn" title="Next photo">‚Üí Next</button>
      <label>Speed
        <input type="range" id="speed" min="0.1" max="10" step="0.1" value="2" />
      </label>
      <label>Seconds
        <input type="number" id="secs" min="0.1" max="10" step="0.1" value="2" />
      </label>
      <button class="btn ok" id="openBuilder">‚öôÔ∏è Terms</button>
    </div>
  </header>

  <nav class="tabs" role="tablist">
    <button class="tab" role="tab" aria-controls="page1" aria-selected="true" id="tab1">Page 1: Slideshow</button>
    <button class="tab" role="tab" aria-controls="page2" aria-selected="false" id="tab2">Page 2: Categories</button>
    <button class="tab" role="tab" aria-controls="page3" aria-selected="false" id="tab3">Page 3: More</button>
  </nav>

  <main>
    <section id="page1" class="page active" role="tabpanel" aria-labelledby="tab1">
      <div class="stage" id="stage">
        <div class="imgwrap" id="imgwrap"><div class="hint">Fetching photos‚Ä¶</div></div>
        <div class="nameBar" id="nameBar">
          <div class="title" id="personName">&nbsp;</div>
          <div class="caption" id="caption"><span class="hint">Tap to show/hide name & credit</span></div>
        </div>
        <button class="nameToggle" id="nameToggle">Hide name</button>
      </div>
    </section>

    <section id="page2" class="page" role="tabpanel" aria-labelledby="tab2">
      <div class="builder">
        <div class="hint">Click terms to select (blue). Triple‚Äëclick to edit a label. Selected terms are the ONLY ones shown. Applying selection clears the photo cache so only the new categories appear.
        </div>
        <div class="grid" id="termGrid"></div>
        <div class="builderActions">
          <input type="text" id="customTerm" placeholder="Add a custom term‚Ä¶ e.g. 'Swedish politicians'" />
          <button class="btn ok" id="addTerm">Add</button>
          <button class="btn primary" id="applyBtn">Apply selection</button>
          <button class="btn warn" id="clearSelBtn">Clear selection</button>
          <span class="hint">Mode:</span>
          <button class="btn" id="modeRandom" aria-pressed="true">Random photos</button>
          <button class="btn" id="modeFixed" aria-pressed="false">Same sequence</button>
          <span class="hint" id="resolveHint"></span>
        </div>
      </div>
    </section>

    <section id="page3" class="page" role="tabpanel" aria-labelledby="tab3">
      <p class="note">Page 3 is available if you add many custom categories‚Äîthe grid will flow here too so nothing is cramped.</p>
      <div class="builder">
        <div class="grid" id="termGrid2"></div>
      </div>
    </section>
  </main>

  <footer>
    <div>Keyboard on PC: Right‚Äëside keys ‚Üí <strong>Next</strong> (except <kbd>P</kbd> = play/pause). Left‚Äëside keys ‚Üí <strong>Previous</strong> (except <kbd>S</kbd> = show/hide name). <kbd>Space</kbd> = play/pause. Arrows also work. While typing/renaming, hotkeys are disabled.</div>
    <div class="sp"></div>
    <a href="#" id="downloadLink" title="Download current image">Download</a>
  </footer>

  <!-- Floating blue button to toggle quick time buttons -->
  <button class="fab" id="speedFab" title="Speed">‚óè</button>
  <div class="drawer" id="speedDrawer">
    <div class="quickRow">
      <button class="quickBtn" data-s="0.1">0.1s</button>
      <button class="quickBtn" data-s="0.2">0.2s</button>
      <button class="quickBtn" data-s="0.5">0.5s</button>
      <button class="quickBtn" data-s="1">1s</button>
      <button class="quickBtn" data-s="2">2s</button>
      <button class="quickBtn" data-s="5">5s</button>
      <button class="quickBtn" data-s="10">10s</button>
    </div>
  </div>

  <div class="toast" id="toast"></div>

<script>
(function(){
  // Elements
  const stage = document.getElementById('stage');
  const wrap = document.getElementById('imgwrap');
  const nameBar = document.getElementById('nameBar');
  const nameToggle = document.getElementById('nameToggle');
  const personName = document.getElementById('personName');
  const caption = document.getElementById('caption');
  const countBadge = document.getElementById('countBadge');
  const playPauseBtn = document.getElementById('playPauseBtn');
  const nextBtn = document.getElementById('nextBtn');
  const speed = document.getElementById('speed');
  const secs = document.getElementById('secs');
  const openBuilder = document.getElementById('openBuilder');
  const tab1 = document.getElementById('tab1');
  const tab2 = document.getElementById('tab2');
  const tab3 = document.getElementById('tab3');
  const page1 = document.getElementById('page1');
  const page2 = document.getElementById('page2');
  const page3 = document.getElementById('page3');
  const termGrid = document.getElementById('termGrid');
  const termGrid2 = document.getElementById('termGrid2');
  const customTerm = document.getElementById('customTerm');
  const addTerm = document.getElementById('addTerm');
  const applyBtn = document.getElementById('applyBtn');
  const clearSelBtn = document.getElementById('clearSelBtn');
  const modeRandom = document.getElementById('modeRandom');
  const modeFixed = document.getElementById('modeFixed');
  const downloadLink = document.getElementById('downloadLink');
  const toast = document.getElementById('toast');
  const speedFab = document.getElementById('speedFab');
  const speedDrawer = document.getElementById('speedDrawer');

  // State
  let items = []; // { name, imageUrl, fileTitle, itemUrl }
  let timer = null;
  let autoplay = true;
  let currIndex = -1;
  let lastKeyTime = 0;
  let fixedOrder = false; // false = random shuffle, true = fixed sequence

  // --- Category builders --------------------------------------------------
  // Helpers to build SPARQL blocks per category
  function blockHumanWithImage(lines){
    return `{ ?person wdt:P31 wd:Q5 ; ${lines.join(' ')} wdt:P18 ?image . }`;
  }
  function blockFictionalWithImage(lines){
    return `{ ?person wdt:P18 ?image . ${lines.join(' ')} }`;
  }

  const CATEGORY_BLOCKS = {
    // Requested presets
    'Beatles': () => blockHumanWithImage([ 'wdt:P463 wd:Q1299 ;' ]), // member of The Beatles
    'Norwegian celebs': () => blockHumanWithImage([ 'wdt:P27 wd:Q20 ;' ]),
    'US celebs': () => blockHumanWithImage([ 'wdt:P27 wd:Q30 ;' ]),
    'Norwegian politicians': () => blockHumanWithImage([ 'wdt:P27 wd:Q20 ;', 'wdt:P106 wd:Q82955 ;' ]),
    'Norwegian ceo': () => blockHumanWithImage([ 'wdt:P27 wd:Q20 ;', 'wdt:P39 wd:Q484876 ;' ]), // position held: CEO
    'US ceo': () => blockHumanWithImage([ 'wdt:P27 wd:Q30 ;', 'wdt:P39 wd:Q484876 ;' ]),
    'World ceo': () => blockHumanWithImage([ 'wdt:P39 wd:Q484876 ;' ]),
    'Music producers': () => blockHumanWithImage([ 'wdt:P106 wd:Q183945 ;' ]), // record producer
    "Models of the 50's": () => `{ ?person wdt:P31 wd:Q5 ; wdt:P106 wd:Q4610556 ; wdt:P18 ?image . OPTIONAL { ?person wdt:P2031 ?start . } OPTIONAL { ?person wdt:P2032 ?end . } FILTER( (BOUND(?start) && YEAR(?start) <= 1959) || (BOUND(?end) && YEAR(?end) >= 1950) ) }`,
    "Models of the 80's": () => `{ ?person wdt:P31 wd:Q5 ; wdt:P106 wd:Q4610556 ; wdt:P18 ?image . OPTIONAL { ?person wdt:P2031 ?start . } OPTIONAL { ?person wdt:P2032 ?end . } FILTER( (BOUND(?start) && YEAR(?start) <= 1989) || (BOUND(?end) && YEAR(?end) >= 1980) ) }`,
    'famous movie characters': () => blockFictionalWithImage([ ' ?person wdt:P31 wd:Q15773347 . ' ]), // film character
    'famous cartoon characters': () => blockFictionalWithImage([ ' { ?person wdt:P31 wd:Q15711870 . } UNION { ?person wdt:P31 wd:Q373494 . } ' ]), // animated or cartoon character
  };

  // Heuristic fallback (country/role)
  const countryMap = { 'norwegian':'Q20','norway':'Q20','swedish':'Q34','sweden':'Q34','danish':'Q35','denmark':'Q35','finnish':'Q33','finland':'Q33','icelandic':'Q189','iceland':'Q189','british':'Q145','uk':'Q145','english':'Q21','scottish':'Q22','irish':'Q27','french':'Q142','german':'Q183','spanish':'Q29','italian':'Q38','american':'Q30','us':'Q30','canadian':'Q16','indian':'Q668','japanese':'Q17','korean':'Q884','brazilian':'Q155' };
  const roleMap = { 'actor':'Q33999','actors':'Q33999','actress':'Q33999','film actors':'Q
